<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="
    		http://www.springframework.org/schema/beans 
    		http://www.springframework.org/schema/beans/spring-beans.xsd
    		http://www.springframework.org/schema/mvc
        	http://www.springframework.org/schema/mvc/spring-mvc.xsd
        	http://www.springframework.org/schema/context
       		http://www.springframework.org/schema/context/spring-context.xsd
       		http://www.springframework.org/schema/aop 
       		http://www.springframework.org/schema/aop/spring-aop.xsd
       		http://www.springframework.org/schema/tx 
       		http://www.springframework.org/schema/tx/spring-tx.xsd">
       		
      <!-- 加载jdbc.properties文件 --> 		
      <context:property-placeholder location="classpath:jdbc.properties"/>
      
      <!-- 开启扫描  -->
      <context:component-scan base-package="com.zhiyou100">
      		<context:exclude-filter type="annotation" 
      		expression="org.springframework.stereotype.Controller"/>
      </context:component-scan>	
      
      <!-- 数据源生效,创建DBCP的对象  数据库连接池 -->		
      <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
      <property name="driverClassName"  value="${jdbc.driver}"></property>
      <property name="url"  value="${jdbc.url}"></property>
      <property name="username"  value="${jdbc.name}"></property>
      <property name="password"  value="${jdbc.password}"></property>
      </bean>
      
      <!-- 事务的切面,事务管理器-->
      <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      		<!-- 注入数据源 -->
      		<property name="dataSource" ref="dataSource"></property>
      		
      </bean>
      <!-- 注解开发需要的事务配置 -->
      <tx:annotation-driven transaction-manager="transactionManager" />
       
       <!-- 创建SqlSessionFactory  -->	
       <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
       	<!-- 加载Mybatis配置文件 -->
       	<property name="configLocation" value="classpath:mybatis-config.xml"></property>
       	<!-- 注入数据源 -->
       	<property name="dataSource" ref="dataSource"></property>
       	<!--  在创建SqlSessionFactory 的 属性中添加 plugins == pagehelper-->
     
       <property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageHelper">
                   
                    <property name="properties">
                        <value>
                          <!--  使用的数据库类型 --> 
                            dialect=mysql
                            reasonable=true
                            supportMethodsArguments=true
                            params=count=countSql
                            autoRuntimeDialect=true
                        </value>
                    </property>
                </bean>
			</array>
		</property>
		
       </bean>
          
       <!-- Spring容器通过扫描mapper文件的位置
       Spring容器通过扫描mapper文件的位置,生成Mapper的代理对象
         -->
      <bean  class="org.mybatis.spring.mapper.MapperScannerConfigurer">
      		<!-- 注入sqlSessionFactory  -->
      		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
      		<!-- mapper文件的位置 -->
      		<property name="basePackage" value="com.zhiyou100.mapper"></property>
      </bean>  
</beans>